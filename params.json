{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Anonymous callback style interface for Backbone.js async methods","google":"","name":"Backbone-callbacks","body":"## Anonymous callback interface for Backbone.js async methods\r\n\r\n[Backbone.js](http://documentcloud.github.com/backbone>Backbone.js) exposes a ```success/error``` style callback interface to the asynchronous methods ```fetch```, ```save```, and ```destroy```.  Example:\r\n\r\n    myModel.fetch({success: function(model, response) {\r\n        ...\r\n      },\r\n      error: function(model, response) {\r\n        ...\r\n      }\r\n    });\r\n\r\nIf you're using Node.js and use your Backbone models on the client as well as the server,\r\nyou may want to interact with your models in more of a Node.js async callback style:\r\n\r\n    myModel.fetch(function(error, response) {\r\n     ...\r\n    });\r\n\r\nThis library adds to the existing interface for ```fetch```, ```save```, and ```destroy```, allowing you to choose the style you prefer.\r\n\r\nIf a callback function is provided as the last argument, it uses that style.  Otherwise it will use the default ```success/error``` style.\r\n\r\nTo use this libary:\r\n\r\n1) Download from github, or ```npm install backbone-callbacks```\r\n\r\n2) Include the library in your application.  Load it after Backbone.js on the browser, or require('backbone-callbacks') in Node.js\r\n\r\n"}